{"version":3,"sources":["uitest.js"],"names":["webdriverio","require","client","remote","desiredCapabilities","browserName","test","before","t","init","url","after","always","end","isExisting","then","result","true"],"mappings":";;;;;AAAA;;;;;;AAEA,IAAIA,cAAcC,QAAQ,aAAR,CAAlB;AACA,IAAIC,SAASF,YAAYG,MAAZ,CAAmB;AAC5B;AACAC,yBAAqB,EAACC,aAAa,QAAd;AAFO,CAAnB,CAAb;;AAKAC,cAAKC,MAAL,CAAY,MAAMC,CAAN,IAAW;AACnB,UAAMN,OAAOO,IAAP,GACDC,GADC,CACG,uBADH,CAAN;AAEH,CAHD;;AAKAJ,cAAKK,KAAL,CAAWC,MAAX,CAAkB,MAAMJ,CAAN,IAAW;AACzB,UAAMN,OAAOW,GAAP,EAAN;AACH,CAFD;;AAIA,mBAAK,aAAL,EAAoBL,KAAK;AACrB,WAAON,OAAOY,UAAP,CAAkB,OAAlB,EAA2BC,IAA3B,CAAgCC,UAAU;AAAA;;AAC7CR,UAAES,IAAF,uBAAOD,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,KAFM,CAAP;AAGH,CAJD","file":"uitest.js","sourcesContent":["import test from 'ava';\n\nlet webdriverio = require('webdriverio');\nlet client = webdriverio.remote({\n    // just using a local chromedriver\n    desiredCapabilities: {browserName: 'chrome'}\n});\n\ntest.before(async t => {\n    await client.init()\n        .url('http://localhost:8000');\n});\n\ntest.after.always(async t => {\n    await client.end();\n});\n\ntest('has a title', t => {\n    return client.isExisting('title').then(result => {\n        t.true(result);\n    });\n});\n"]}
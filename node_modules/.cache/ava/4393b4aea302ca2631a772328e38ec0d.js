'use strict';

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Server = require('./server.js'); // le fichier contenant les fonctions à tester

(0, _ava2.default)('Le plateau de jeu est initialisé', t => {
  t.deepEqual(Server.initGameBoard(), [[false, false, false, false, false, false, false, false, false, false, false, false, 1, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, 1, false, 1, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, 1, false, 1, false, 1, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, 1, false, 1, false, 1, false, 1, false, false, false, false, false, false, false, false, false], [3, false, 3, false, 3, false, 3, false, -1, false, -1, false, -1, false, -1, false, -1, false, 5, false, 5, false, 5, false, 5], [false, 3, false, 3, false, 3, false, -1, false, -1, false, -1, false, -1, false, -1, false, -1, false, 5, false, 5, false, 5, false], [false, false, 3, false, 3, false, -1, false, -1, false, -1, false, -1, false, -1, false, -1, false, -1, false, 5, false, 5, false, false], [false, false, false, 3, false, -1, false, -1, false, -1, false, -1, false, -1, false, -1, false, -1, false, -1, false, 5, false, false, false], [false, false, false, false, -1, false, -1, false, -1, false, -1, false, -1, false, -1, false, -1, false, -1, false, -1, false, false, false, false], [false, false, false, 6, false, -1, false, -1, false, -1, false, -1, false, -1, false, -1, false, -1, false, -1, false, 4, false, false, false], [false, false, 6, false, 6, false, -1, false, -1, false, -1, false, -1, false, -1, false, -1, false, -1, false, 4, false, 4, false, false], [false, 6, false, 6, false, 6, false, -1, false, -1, false, -1, false, -1, false, -1, false, -1, false, 4, false, 4, false, 4, false], [6, false, 6, false, 6, false, 6, false, -1, false, -1, false, -1, false, -1, false, -1, false, 4, false, 4, false, 4, false, 4], [false, false, false, false, false, false, false, false, false, 2, false, 2, false, 2, false, 2, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, 2, false, 2, false, 2, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, 2, false, 2, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, 2, false, false, false, false, false, false, false, false, false, false, false, false]]);
});

(0, _ava2.default)('Les données de la partie sont initialisées', t => {
  var games = {
    1: {
      numPlayers: 2,
      numColors: 3,
      COLORS: [[1, 3, 5], [2, 4, 6]],
      player1: 'Marc',
      player2: 'Joueur 2',
      PLAYERS: [],
      isPlayedByIa: [false, false],
      numHumanPlayers: 2,
      isIaPlaying: false,
      restartCount: 0
    },
    2: {
      numPlayers: 4,
      numColors: 1,
      COLORS: [[1], [2], [3], [4]],
      player1: 'Marc',
      player2: 'Sophie',
      player3: 'Antoine',
      player4: 'Luc',
      PLAYERS: [],
      isPlayedByIa: [false, false],
      numHumanPlayers: 2,
      isIaPlaying: false,
      restartCount: 0
    }
  };
  var expected = {
    1: {
      numPlayers: 2,
      numColors: 3,
      player1: 'Marc',
      player2: 'Joueur 2',
      numHumanPlayers: 2,
      isPlayedByIa: [false, false],
      COLORS: [[1, 3, 5], [2, 4, 6]],
      PLAYERS: [{ colors: [1, 3, 5],
        name: 'Marc',
        number: 1,
        score: 0
      }, { colors: [2, 4, 6],
        name: 'Joueur 2',
        number: 2,
        score: 0
      }],
      Time: 500,
      gameBoard: Server.initGameBoard(),
      gameOver: false,
      gameState: [[false, false, false], [false, false, false]],
      history: [false, false],
      isIaPlaying: false,
      player: 0,
      restartCount: 0,
      startCell: [0, 0]
    },
    2: {
      numPlayers: 4,
      numColors: 1,
      COLORS: [[1], [2], [3], [4]],
      player1: 'Marc',
      player2: 'Sophie',
      player3: 'Antoine',
      player4: 'Luc',
      PLAYERS: [{ colors: [1],
        name: 'Marc',
        number: 1,
        score: 0
      }, { colors: [2],
        name: 'Sophie',
        number: 2,
        score: 0
      }, { colors: [3],
        name: 'Antoine',
        number: 3,
        score: 0
      }, { colors: [4],
        name: 'Luc',
        number: 4,
        score: 0
      }],
      Time: 500,
      gameBoard: Server.initGameBoard(),
      gameOver: false,
      gameState: [[false], [false], [false], [false]],
      history: [false, false, false, false],
      player: 0,
      restartCount: 0,
      startCell: [0, 0]
    }
  };
  for (var game in games) {
    Server.init(games, game);
  }
  t.deepEqual(games, expected);
});

_ava2.default.todo('restart');
_ava2.default.todo('isMovingBackward');
_ava2.default.todo('sameTraject');
_ava2.default.todo('getPath');
_ava2.default.todo('getJumps');
_ava2.default.todo('hasWon');
_ava2.default.todo('isOnGameBoard');
_ava2.default.todo('contains');
_ava2.default.todo('initArray');
_ava2.default.todo('sendScore');
_ava2.default.todo('makeBestMove');
_ava2.default.todo('validateMove');
_ava2.default.todo('play');
_ava2.default.todo('move');

(0, _ava2.default)('HTML characters should be escaped', t => {
  t.is(Server.escapeHtml('<hey>'), '&lt;hey&gt;');
});
//# sourceMappingURL=/home/khornya/L2INF/Projet/dames-chinoises/node_modules/.cache/ava/4393b4aea302ca2631a772328e38ec0d.js.map